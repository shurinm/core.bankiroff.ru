<?php

namespace App\Helpers;

use Carbon\Carbon;

use App\Models\Region;

use Illuminate\Support\Facades\Log;

class SubDomainHelper
{
    public static function getSubdomainId($subdomain)
    {
        if ($subdomain) {
            $subdomain_obj = Region::where('subdomain', $subdomain)->first();
            if (!$subdomain_obj) return null;
            $subdomain_region_id =  $subdomain_obj->id;
            return $subdomain_region_id;
        }
        return null;
    }


    public static function addSubdomainToMany($items)
    {
        /*
        If the material (news or article) has 1 region, we check if there is a subdomain for that region, if it has we send it to the frontend. 
        If the material does not have regions or if it has more than 1, in this case the subdomain will be null (Global material, not connected to any subdomain) 
        */
        if (count($items) > 0) {
            foreach ($items as $key => &$item) {
                if (count($item->regions) == 1 && $item->regions[0]) {
                    $subdomain_obj = Region::where('id', $item->regions[0]->region_id)->first();
                    $subdomain_str = $subdomain_obj ? $subdomain_obj->subdomain : null;
                    $item->subdomain = $subdomain_str;
                } else {
                    $item->subdomain = null;
                }
            }
        }
        return $items;
    }

    public static function addSubdomainToOne($item)
    {
        /*
        If the material (news or article) has 1 region, we check if there is a subdomain for that region, if it has we send it to the frontend. 
        If the material does not have regions or if it has more than 1, in this case the subdomain will be null (Global material, not connected to any subdomain) 
        */

        if (count($item->regions) == 1 && $item->regions[0]) {
            $subdomain_obj = Region::where('id', $item->regions[0]->region_id)->first();
            $subdomain_str = $subdomain_obj ? $subdomain_obj->subdomain : null;
            $item->subdomain = $subdomain_str;
        } else {
            $item->subdomain = null;
        }

        return $item;
    }
}
